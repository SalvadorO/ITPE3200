@model WebApp.Model.AdminFlight

@{
    ViewBag.Title = "EditFlight";
}

<h2>Rediger Flyrute</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.TravelDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TravelDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TravelDate, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.DepartureTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DepartureTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DepartureTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Departure, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Departure, new SelectList(Model.Airports, "ID", "Name"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Departure, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DestinationTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DestinationTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DestinationTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Destination, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Destination, new SelectList(Model.Airports, "ID", "Name"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Destination, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClassType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClassType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClassType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Airplane, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Airplane, new SelectList(Model.Airplanes, "ID", "Name"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Airplane, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Lagre endringer" class="btn btn-success" />
                <input type="button" value="Slett flyrute" class="btn btn-danger" data-toggle="modal" data-target="#delete-Flight-Modal" />
                <button type="button" class="btn btn-default" id="avbrytKnapp"> Tilbake </button>

            </div>
        </div>
    </div>
}
<div class="modal fade" id="delete-Flight-Modal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h3 class="modal-title">Sikker på at du vil slette?</h3>
            </div>
            <div class="modal-body">
                <dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.ID)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.ID)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.TravelDate)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.TravelDate)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.DepartureTime)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.DepartureTime)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.Departure)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Departure)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.DestinationTime)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.DestinationTime)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.Destination)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Destination)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.ClassType)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.ClassType)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.Airplane)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Airplane)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.Price)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Price)
                    </dd>
                </dl>
            </div>
            <div class="modal-footer">
                @using (Html.BeginForm("DeleteFlight", "Admin", new { id = Model.ID }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-actions no-color">
                        <input type="submit" value="Slett flyrute" class="btn btn-danger" />
                        <input type="button" value="Lukk" class="btn btn-default" data-dismiss="modal">
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).on('click', '#avbrytKnapp', function () {
        history.go(-1);
    });

</script>