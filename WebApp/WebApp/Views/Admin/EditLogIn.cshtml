@model WebApp.Model.EmployeeEditLogin

@{
    ViewBag.Title = "Endre login";
}

<h2>Endre Brukernavn og Passord</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    int goBack = -1;
    <div class="form-horizontal">
        @if (ViewBag.EditLogin != null)
        {
        <div>
            @if (ViewBag.EditLogin)
                    {
                        goBack = -2;
                <p class="alert alert-success">Brukernavn og passord endret</p>
                    }
                    else
                    {
                        goBack = -2;
                <p class="alert alert-danger">Det skjedde noe feil...</p>
            }
        </div>
        }
        @if (ViewBag.OPOK != null)
        {
            <div>
                @if (!ViewBag.OPOK)
                {
                        goBack = -2;
                    <p class="alert alert-danger">Gammelt passord er feil!</p>
                }
            </div>
        }
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OldPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.OldPassword,  new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Lagre" class="btn btn-success" />
                <button type="button" class="btn btn-default" id="avbrytKnapp" value="@goBack"> Tilbake </button>
            </div>
        </div>
    </div>
}
<script type="text/javascript">
    $(document).on('click', '#avbrytKnapp', function () {
        history.go($(this).val());
    });

</script>
