@model WebApp.Models.ViewModel
@Styles.Render("~/Content/css")
@Styles.Render("~/Content/themes/base/css")
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/moment")
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/jqueryui")
@Scripts.Render("~/bundles/bootstrap")
@Scripts.Render("~/bundles/jqueryunobtrusive")
@Styles.Render("~/Content/css")
@Styles.Render("~/Content/themes/base/css")
@{
    ViewBag.Title = "Reisen";
}


<div class="well">
    <div>
        <h4>Reisen</h4>
        <hr />
        <h2>Tur</h2>
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.booking.chosenTravel[0].travelDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.booking.chosenTravel[0].departureTime)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.booking.chosenTravel[0].departure)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.booking.chosenTravel[0].destinationTime)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.booking.chosenTravel[0].destination)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.booking.chosenTravel[0].classType)
                </th>
                <th></th>
            </tr>

            @foreach (var x in Model.booking.chosenTravel)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => x.travelDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => x.departureTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => x.departure)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => x.destinationTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => x.destination)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => x.classType)
                    </td>
                </tr>
            }
        </table>


        @if (Model.booking.roundTrip)
            {
            <h2>Retur</h2>
            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.booking.chosenReturn[0].travelDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.booking.chosenReturn[0].departureTime)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.booking.chosenReturn[0].departure)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.booking.chosenReturn[0].destinationTime)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.booking.chosenReturn[0].destination)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.booking.chosenReturn[0].classType)
                    </th>
                    <th></th>
                </tr>

                @foreach (var x in Model.booking.chosenReturn)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => x.travelDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => x.departureTime)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => x.departure)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => x.destinationTime)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => x.destination)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => x.classType)
                        </td>
                    </tr>
                }
            </table>
        }



        <h4>Kontaktperson</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.customers[0].eMail)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.customers[0].eMail)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.customers[0].firstName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.customers[0].firstName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.customers[0].lastName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.customers[0].lastName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.customers[0].address)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.customers[0].address)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.customers[0].city)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.customers[0].city)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.customers[0].zipCode)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.customers[0].zipCode)
            </dd>
        </dl>
        @if (Model.booking.travelers > 1)
        {
            for (int i = 1; i < Model.booking.travelers; i++)
            {
                <h4>Medpassasjer @i</h4>
                <hr />
                <dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.customers[i].eMail)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.customers[i].eMail)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.customers[i].firstName)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.customers[i].firstName)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.customers[i].lastName)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.customers[i].lastName)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.customers[i].address)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.customers[i].address)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.customers[i].city)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.customers[i].city)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.customers[i].zipCode)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.customers[i].zipCode)
                    </dd>

                </dl>
            }
        }
    </div>

    <div><h1>Totalpris: @Html.DisplayFor(model => model.booking.totalPrice).00,-</h1></div>


    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#confirmationModal" onclick="pushDatabase">
        Bestill
    </button>
    <button type="button" class="btn btn-default" id="avbrytKnapp">
        Avbryt
    </button>
  
    
</div>
        <div id="confirmationModal" class="modal fade" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Bekreftelse</h4>
                    </div>
                    <div class="modal-body">
                        <p>
                            <div>
                                <h2>Tur</h2>
                                <table class="table">
                                    <tr>
                                        <th>
                                            @Html.DisplayNameFor(model => model.booking.chosenTravel[0].travelDate)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.booking.chosenTravel[0].departureTime)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.booking.chosenTravel[0].departure)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.booking.chosenTravel[0].destinationTime)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.booking.chosenTravel[0].destination)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.booking.chosenTravel[0].classType)
                                        </th>
                                        <th></th>
                                    </tr>

                                    @foreach (var x in Model.booking.chosenTravel)
                                    {
                                        <tr>
                                            <td>
                                                @Html.DisplayFor(modelItem => x.travelDate)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => x.departureTime)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => x.departure)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => x.destinationTime)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => x.destination)
                                            </td>

                                            <td>
                                                @Html.DisplayFor(modelItem => x.classType)
                                            </td>
                                        </tr>
                                    }
                                </table>

                                @if (Model.booking.roundTrip)
                                 {
                                    <h2>Retur</h2>
                                    <table class="table">
                                        <tr>
                                            <th>
                                                @Html.DisplayNameFor(model => model.booking.chosenReturn[0].travelDate)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.booking.chosenReturn[0].departureTime)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.booking.chosenReturn[0].departure)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.booking.chosenReturn[0].destinationTime)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.booking.chosenReturn[0].destination)
                                            </th>
                                            <th>
                                                @Html.DisplayNameFor(model => model.booking.chosenReturn[0].classType)
                                            </th>
                                            <th></th>
                                        </tr>

                                        @foreach (var x in Model.booking.chosenReturn)
                                        {
                                            <tr>
                                                <td>
                                                    @Html.DisplayFor(modelItem => x.travelDate)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => x.departureTime)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => x.departure)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => x.destinationTime)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => x.destination)
                                                </td>

                                                <td>
                                                    @Html.DisplayFor(modelItem => x.classType)
                                                </td>
                                            </tr>
                                        }
                                    </table>
                                }
                            </div>
                            <br />
                            <h2>Totalpris: @Html.DisplayFor(model => model.booking.totalPrice).00,-</h2>
                            <br />
                            <h3>Betaling</h3> 
                            

                             @using (Html.BeginForm("pushDatabase", "Home"))
                             {
                                 @Html.AntiForgeryToken()
                                <div class="form-horizontal">
                                    <br />
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.cardInfo.cardName, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-5">
                                            @Html.EditorFor(model => model.cardInfo.cardName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Fornavn og Etternavn" } })
                                            @Html.ValidationMessageFor(model => model.cardInfo.cardName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <br />
                                    <br />
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.cardInfo.cardNr, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-5">
                                            @Html.EditorFor(model => model.cardInfo.cardNr, new { htmlAttributes = new { @class = "form-control", @placeholder = "************1234", @maxlength = "16" } })
                                            @Html.ValidationMessageFor(model => model.cardInfo.cardNr, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <br />
                                    <br />
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.cardInfo.expDateMM, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-2">
                                            @Html.DropDownListFor(model => model.cardInfo.expDateMM,
                  new List<SelectListItem>
                                {
                                new SelectListItem { Value = "" , Text = "" },
                                new SelectListItem { Value = "01" , Text = "01" },
                                new SelectListItem { Value = "02" , Text = "02" },
                                new SelectListItem { Value = "03" , Text = "03" },
                                new SelectListItem { Value = "04" , Text = "04" },
                                new SelectListItem { Value = "05" , Text = "05" },
                                new SelectListItem { Value = "06" , Text = "06" },
                                new SelectListItem { Value = "07" , Text = "07" },
                                new SelectListItem { Value = "08" , Text = "08" },
                                new SelectListItem { Value = "09" , Text = "09" },
                                new SelectListItem { Value = "10" , Text = "10" },
                                new SelectListItem { Value = "11" , Text = "11" },
                                new SelectListItem { Value = "12" , Text = "12" },
                                }, new { htmlAttributes = new { @class = "form-control", @id = "expDateMM", @placeholder = "MM" } })
                                            @Html.ValidationMessageFor(model => model.cardInfo.expDateMM, "", new { @class = "text-danger" })
                                            /
                                            @Html.DropDownListFor(model => model.cardInfo.expDateYY,
                  new List<SelectListItem>
                                {
                                new SelectListItem { Value = "" , Text = "" },
                                new SelectListItem { Value = "17" , Text = "17" },
                                new SelectListItem { Value = "18" , Text = "18" },
                                new SelectListItem { Value = "19" , Text = "19" },
                                new SelectListItem { Value = "20" , Text = "20" },
                                new SelectListItem { Value = "21" , Text = "21" },
                                new SelectListItem { Value = "21" , Text = "22" },
                                new SelectListItem { Value = "22" , Text = "23" },
                                new SelectListItem { Value = "23" , Text = "24" },
                                new SelectListItem { Value = "24" , Text = "25" },
                                }, new { htmlAttributes = new { @class = "form-control", @id = "expDateYY", @placeholder = "YY" } })
                                            @Html.ValidationMessageFor(model => model.cardInfo.expDateYY, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <br />
                                    <br />
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.cardInfo.code, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-1">
                                            @Html.EditorFor(model => model.cardInfo.code, new { htmlAttributes = new { @class = "form-control", @id = "CVV", @placeholder = "CVV", @maxlength = "3" } })
                                            @Html.ValidationMessageFor(model => model.cardInfo.code, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <br />
                                    <br />
                                    <div class="modal-footer">
                                        <div class="form-group">
                                            <div class="col-md-offset-2 col-md-10">
                                                <input type="submit" value="Betal" class="btn btn-primary" />
                                                <button type="button" class="btn btn-default" data-dismiss="modal">Avbryt</button>
                                            </div>
                                        </div>
                                    </div>
                                  </div>
                                    }
                                </div>
                    </div>
                 </div>
            </div>

    <script type="text/javascript">
        $(document).on('click', '#avbrytKnapp', function () {
            history.go(-1);
    });

</script>