    @model WebApp.Models.ViewModel

    @{
        ViewBag.Title = "Registration";
    }

        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/jqueryval")
        <h2>Registration</h2>


        @using (Html.BeginForm())
        {
            <div class="form-group">
                @Html.AntiForgeryToken()

                @Html.DisplayNameFor(model => model.booking.travelers)
                @Html.DisplayFor(model => model.booking.travelers)
                <br />
                @Html.DisplayNameFor(model => model.booking.roundTrip)
                @Html.DisplayFor(model => model.booking.roundTrip)
                <br />
            </div>












                <h2>Tur</h2>
                <table class="table">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.booking.chosenTravel[0].travelDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.booking.chosenTravel[0].departureTime)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.booking.chosenTravel[0].departure)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.booking.chosenTravel[0].destinationTime)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.booking.chosenTravel[0].classType)
                        </th>
                        <th></th>
                    </tr>

                    @foreach (var x in Model.booking.chosenTravel)
                    {
                        <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => x.travelDate)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => x.travelDate)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => x.departureTime)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => x.departure)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => x.departureTime)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => x.classType)
                                </td>
                            </tr>
                    }
                    </table>


            if (Model.booking.roundTrip) {
                <h2>Retur</h2>
                <table class="table">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.booking.chosenReturn[0].travelDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.booking.chosenReturn[0].departureTime)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.booking.chosenReturn[0].departure)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.booking.chosenReturn[0].destinationTime)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.booking.chosenReturn[0].classType)
                        </th>
                        <th></th>
                    </tr>

                    @foreach (var x in Model.booking.chosenReturn)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => x.travelDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => x.travelDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => x.departureTime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => x.departure)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => x.departureTime)
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => x.classType)
                            </td>
                        </tr>
                    }
                    </table>
            }












                <div class="form-horizontal">
                    <h4>Kontaktperson</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.customers[0].firstName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.customers[0].firstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.customers[0].firstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.customers[0].lastName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.customers[0].lastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.customers[0].lastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.customers[0].phoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.customers[0].phoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.customers[0].phoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.customers[0].eMail, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.customers[0].eMail, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.customers[0].eMail, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @if (Model.booking.travelers > 1)
                    {
                        for (int i = 1; i < Model.booking.travelers; i++)
                        {

                            <h4>Medreisende</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.customers[i].firstName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.customers[i].firstName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.customers[i].firstName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.customers[i].lastName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.customers[i].lastName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.customers[i].lastName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.customers[i].phoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.customers[i].phoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.customers[i].phoneNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.customers[i].eMail, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.customers[i].eMail, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.customers[i].eMail, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        }
                    }

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>
                }
