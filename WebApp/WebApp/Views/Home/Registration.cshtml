    @model WebApp.Models.ViewModel
@Styles.Render("~/Content/css")
@Styles.Render("~/Content/themes/base/css")
    @{
        ViewBag.Title = "Registrering";
    }

       
       
        <div class="well">
                <h2>Tur</h2>
                <table class="table">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.booking.chosenTravel[0].travelDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.booking.chosenTravel[0].departureTime)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.booking.chosenTravel[0].departure)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.booking.chosenTravel[0].destinationTime)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.booking.chosenTravel[0].destination)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.booking.chosenTravel[0].classType)
                        </th>
                        <th></th>
                    </tr>

                    @foreach (var x in Model.booking.chosenTravel)
                    {
                        <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => x.travelDate)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => x.departureTime)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => x.departure)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => x.destinationTime)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => x.destination)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => x.classType)
                                </td>
                            </tr>
                    }
                    </table>


            @if (Model.booking.roundTrip)
            {
                <h2>Retur</h2>
                <table class="table">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.booking.chosenReturn[0].travelDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.booking.chosenReturn[0].departureTime)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.booking.chosenReturn[0].departure)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.booking.chosenReturn[0].destinationTime)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.booking.chosenReturn[0].destination)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.booking.chosenReturn[0].classType)
                        </th>
                        <th></th>
                    </tr>

                    @foreach (var x in Model.booking.chosenReturn)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => x.travelDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => x.departureTime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => x.departure)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => x.destinationTime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => x.destination)
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => x.classType)
                            </td>
                        </tr>
                    }
                    </table>
            }
</div>





@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="well">
        <div class="form-horizontal">
            <h4>Kontaktperson</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.customers[0].firstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.customers[0].firstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.customers[0].firstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.customers[0].lastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.customers[0].lastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.customers[0].lastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.customers[0].phoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.customers[0].phoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.customers[0].phoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.customers[0].eMail, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.customers[0].eMail, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.customers[0].eMail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.customers[0].address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.customers[0].address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.customers[0].address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.customers[0].zipCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.customers[0].zipCode, new { htmlAttributes = new { @class = "form-control" , @maxlength = "4" } })
                    @Html.ValidationMessageFor(model => model.customers[0].zipCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.customers[0].city, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.customers[0].city, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.customers[0].city, "", new { @class = "text-danger" })
                </div>
            </div>

            @if (Model.booking.travelers > 1)
            {
                for (int i = 1; i < Model.booking.travelers; i++)
                {

                    <h4>Medreisende @i</h4>
                    <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.customers[i].firstName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.customers[i].firstName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.customers[i].firstName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.customers[i].lastName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.customers[i].lastName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.customers[i].lastName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.customers[i].phoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.customers[i].phoneNumber, new { htmlAttributes = new { @class = "form-control", data_val = "false" } })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.customers[i].eMail, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.customers[i].eMail, new { htmlAttributes = new { @class = "form-control", data_val = "false" } })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.customers[i].address, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.customers[i].address, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.customers[i].address, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.customers[i].zipCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.customers[i].zipCode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.customers[i].zipCode, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.customers[i].city, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.customers[i].city, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.customers[i].city, "", new { @class = "text-danger" })
                                </div>
                            </div>

                }
            }

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Videre"  class="btn btn-primary" />
                    <button type="button" class="btn btn-default" id="avbrytKnapp">
                        Avbryt
                    </button>
                   
                </div>
            </div>

        </div>
    </div>

    <script type="text/javascript">
    $(document).on('click', '#avbrytKnapp', function () {
        history.go(-1);
    });

    </script>
}
