@model WebApp.Models.ViewModel

@{
    ViewBag.Title = "Registration";
}
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
<h2>Registration</h2>


@using (Html.BeginForm())
{
    <div class="form-group">
        @Html.AntiForgeryToken()
        @Html.DisplayNameFor(model => model.booking.travelers)
        @Html.DisplayFor(model => model.booking.travelers)
        <br />
        @Html.DisplayNameFor(model => model.flight.classType)
        @Html.DisplayFor(model => model.flight.classType)
        <br />
        @Html.DisplayNameFor(model => model.flight.departure)
        @Html.DisplayFor(model => model.flight.departure)
        <br />
        @Html.DisplayNameFor(model => model.flight.destination)
        @Html.DisplayFor(model => model.flight.destination)
        <br />
        @Html.DisplayNameFor(model => model.booking.oneWay)
        @Html.DisplayFor(model => model.booking.oneWay)
        <br />
        @Html.DisplayNameFor(model => model.booking.travelDate)
        @Html.DisplayFor(model => model.booking.travelDate)
        <br />
        @Html.DisplayNameFor(model => model.flight.returnDate)
        @Html.DisplayFor(model => model.flight.returnDate)
        <br />
    </div>
    <div class="form-horizontal">
        <h4>Kontaktperson</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.customers[0].firstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.customers[0].firstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.customers[0].firstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.customers[0].lastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.customers[0].lastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.customers[0].lastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.customers[0].phoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.customers[0].phoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.customers[0].phoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.customers[0].eMail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.customers[0].eMail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.customers[0].eMail, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model.booking.travelers > 1)
        {
            for (int i = 1; i < Model.booking.travelers; i++)
            {

                <h4>Medreisende</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.customers[i].firstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.customers[i].firstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.customers[i].firstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.customers[i].lastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.customers[i].lastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.customers[i].lastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.customers[i].phoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.customers[i].phoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.customers[i].phoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.customers[i].eMail, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.customers[i].eMail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.customers[i].eMail, "", new { @class = "text-danger" })
                    </div>
                </div>

            }
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
